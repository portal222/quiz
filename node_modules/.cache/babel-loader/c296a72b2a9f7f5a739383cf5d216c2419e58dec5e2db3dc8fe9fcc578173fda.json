{"ast":null,"code":"import React,{useState,useEffect,useMemo}from\"react\";import Trivia from\"./Trivia\";import axios from\"axios\";import Timer from\"./Timer\";import Buttons from\"./Buttons\";import Confetti from\"react-confetti\";import Applause from\"./Applause\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function EasyStart(){const[questionNumber,setQuestionNumber]=useState(1);const[stop,setStop]=useState(false);const[error,setError]=useState(null);const[datas,setDatas]=useState([]);const[earned,setEarned]=useState(\"$ 0\");const[title,setTitle]=useState([]);useEffect(()=>{getTrivia();},[]);const getTrivia=async()=>{const url=`https://opentdb.com/api.php?amount=15&difficulty=easy&type=multiple`;try{const response=await axios.get(url);const data=response.data;setTitle(data.results.category);setDatas(data.results);console.log(\"rezultat trivia\",data.results);}catch(err){setError(err);}};const moneyPyramid=useMemo(()=>[{id:1,amount:\"$ 100\"},{id:2,amount:\"$ 200\"},{id:3,amount:\"$ 300\"},{id:4,amount:\"$ 500\"},{id:5,amount:\"$ 1000\"},{id:6,amount:\"$ 2000\"},{id:7,amount:\"$ 4000\"},{id:8,amount:\"$ 8000\"},{id:9,amount:\"$ 16000\"},{id:10,amount:\"$ 32000\"},{id:11,amount:\"$ 64000\"},{id:12,amount:\"$ 125000\"},{id:13,amount:\"$ 250000\"},{id:14,amount:\"$ 500000\"},{id:15,amount:\"$ 1000000\"}].reverse(),[]);useEffect(()=>{questionNumber>1&&setEarned(moneyPyramid.find(m=>m.id===questionNumber-1).amount);},[moneyPyramid,questionNumber]);if(earned===\"$ 1000000\"){return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main2\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"congratulations\",children:\"CONGRATULATIONS\"}),/*#__PURE__*/_jsxs(\"h1\",{className:\"endText\",children:[\" You have answered all the questions, \",/*#__PURE__*/_jsx(\"br\",{}),\"you made it to the end and won \",/*#__PURE__*/_jsx(\"br\",{}),\" a fantastic MILLION dollars.\"]}),/*#__PURE__*/_jsx(Buttons,{}),/*#__PURE__*/_jsx(Confetti,{gravity:0.04,numberOfPieces:250,initialVelocityX:4,colors:[\"#FF4500\",\"#C9FFE5\",\"#FF0800\",\"#89CFF0\",\"#8A2BE2\",\"#C4D8E2\",\"#30BFBF\",\"#FFF600\",\"#FFAE42\",\"#32CD32\",\"#C5B358\"]}),/*#__PURE__*/_jsx(Applause,{})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main\",children:stop?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"endText\",children:[\"You earned: \",earned]}),/*#__PURE__*/_jsx(Buttons,{})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",/*#__PURE__*/_jsx(\"div\",{className:\"top\",children:/*#__PURE__*/_jsx(\"div\",{className:\"timer\",children:/*#__PURE__*/_jsx(Timer,{setStop:setStop,questionNumber:questionNumber})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom\",children:/*#__PURE__*/_jsx(Trivia,{title:title,data:datas,setStop:setStop,questionNumber:questionNumber,setQuestionNumber:setQuestionNumber})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"pyramid\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"moneyList\",children:moneyPyramid.map(m=>/*#__PURE__*/_jsxs(\"li\",{className:questionNumber===m.id?\"moneyListItem active\":\"moneyListItem\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"moneyListItemNumber\",children:m.id}),/*#__PURE__*/_jsx(\"span\",{className:\"moneyListItemAmount\",children:m.amount})]},m.id))})})]});}export default EasyStart;","map":{"version":3,"names":["React","useState","useEffect","useMemo","Trivia","axios","Timer","Buttons","Confetti","Applause","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EasyStart","questionNumber","setQuestionNumber","stop","setStop","error","setError","datas","setDatas","earned","setEarned","title","setTitle","getTrivia","url","response","get","data","results","category","console","log","err","moneyPyramid","id","amount","reverse","find","m","className","children","gravity","numberOfPieces","initialVelocityX","colors","map"],"sources":["D:/2024/quiz/src/components/EasyStart.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport Trivia from \"./Trivia\";\nimport axios from \"axios\"\nimport Timer from \"./Timer\";\nimport Buttons from \"./Buttons\";\nimport Confetti from \"react-confetti\";\nimport Applause from \"./Applause\";\n\n\n\nfunction EasyStart() {\n\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [stop, setStop] = useState(false);\n  const [error, setError] = useState(null);\n  const [datas, setDatas] = useState([]);\n  const [earned, setEarned] = useState(\"$ 0\");\n  const [title, setTitle] = useState([]);\n\n\n  useEffect(() => {\n    getTrivia();\n  }, []);\n\n  const getTrivia = async () => {\n\n    const url = `https://opentdb.com/api.php?amount=15&difficulty=easy&type=multiple`\n\n    try {\n      const response = await axios.get(url);\n      const data = response.data\n      setTitle(data.results.category)\n\n      setDatas(data.results);\n      console.log(\"rezultat trivia\", data.results);\n    } catch (err) {\n      setError(err);\n    }\n  }\n\n  const moneyPyramid = useMemo(\n    () =>\n      [\n        { id: 1, amount: \"$ 100\" },\n        { id: 2, amount: \"$ 200\" },\n        { id: 3, amount: \"$ 300\" },\n        { id: 4, amount: \"$ 500\" },\n        { id: 5, amount: \"$ 1000\" },\n        { id: 6, amount: \"$ 2000\" },\n        { id: 7, amount: \"$ 4000\" },\n        { id: 8, amount: \"$ 8000\" },\n        { id: 9, amount: \"$ 16000\" },\n        { id: 10, amount: \"$ 32000\" },\n        { id: 11, amount: \"$ 64000\" },\n        { id: 12, amount: \"$ 125000\" },\n        { id: 13, amount: \"$ 250000\" },\n        { id: 14, amount: \"$ 500000\" },\n        { id: 15, amount: \"$ 1000000\" }\n      ].reverse(),\n    []\n  );\n\n  useEffect(() => {\n    questionNumber > 1 &&\n      setEarned(moneyPyramid.find((m) => m.id === questionNumber - 1).amount);\n  }, [moneyPyramid, questionNumber])\n\n  if (earned === \"$ 1000000\") {\n    return (\n      <div className=\"app\">\n        <div className=\"main2\">\n          <h1 className=\"congratulations\">CONGRATULATIONS</h1>\n          <h1 className=\"endText\"> You have answered all the questions, <br></br>\n            you made it to the end and won <br></br> a fantastic MILLION dollars.\n          </h1>\n          <Buttons />\n          <Confetti gravity={0.04} numberOfPieces={250}\n            initialVelocityX={4}\n            colors={[\"#FF4500\", \"#C9FFE5\", \"#FF0800\", \"#89CFF0\", \"#8A2BE2\", \"#C4D8E2\", \"#30BFBF\",\n              \"#FFF600\", \"#FFAE42\", \"#32CD32\", \"#C5B358\"]}\n          />\n          <Applause />\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"main\">\n        {stop ? (<><h1 className=\"endText\">You earned: {earned}</h1>\n          <Buttons /></>) : (\n          <> <div className=\"top\">\n            <div className=\"timer\"><Timer setStop={setStop} questionNumber={questionNumber} /></div>\n          </div>\n            <div className=\"bottom\"><Trivia\n              title={title}\n              data={datas}\n              setStop={setStop}\n              questionNumber={questionNumber}\n              setQuestionNumber={setQuestionNumber} />\n            </div>\n          </>\n        )}\n\n      </div>\n      <div className=\"pyramid\">\n        <ul className=\"moneyList\">\n          {moneyPyramid.map((m) => (\n            <li className={questionNumber === m.id ? \"moneyListItem active\" : \"moneyListItem\"}\n              key={m.id}>\n              <span className=\"moneyListItemNumber\">{m.id}</span>\n              <span className=\"moneyListItemAmount\">{m.amount}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default EasyStart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}