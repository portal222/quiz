{"ast":null,"code":"import React,{useState,useEffect,useMemo}from\"react\";import Trivia from\"./Trivia\";import axios from\"axios\";import Timer from\"./Timer\";import Buttons from\"./Buttons\";import{useParams}from\"react-router-dom\";import Confetti from\"react-confetti\";import Applause from\"./Applause\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function MediumOption(){const[questionNumber,setQuestionNumber]=useState(1);const[stop,setStop]=useState(false);const[error,setError]=useState(null);const[datas,setDatas]=useState([]);const[earned,setEarned]=useState(\"$ 0\");const[title,setTitle]=useState([]);const params=useParams();const number=params.event;useEffect(()=>{getTrivia();},[]);const getTrivia=async()=>{const url=`https://opentdb.com/api.php?amount=10&category=${number}&difficulty=medium&type=multiple`;try{var _data$results;const response=await axios.get(url);const data=response.data;setTitle((_data$results=data.results)===null||_data$results===void 0?void 0:_data$results[0].category);setDatas(data.results);}catch(err){setError(err);}};const moneyPyramid=useMemo(()=>[{id:1,amount:\"$ 100\"},{id:2,amount:\"$ 200\"},{id:3,amount:\"$ 300\"},{id:4,amount:\"$ 500\"},{id:5,amount:\"$ 800\"},{id:6,amount:\"$ 1300\"},{id:7,amount:\"$ 2100\"},{id:8,amount:\"$ 3400\"},{id:9,amount:\"$ 5500\"},{id:10,amount:\"$ 10000\"}].reverse(),[]);useEffect(()=>{questionNumber>1&&setEarned(moneyPyramid.find(m=>m.id===questionNumber-1).amount);},[moneyPyramid,questionNumber]);if(earned===\"$ 10000\"){return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main2\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"congratulations\",children:\"CONGRATULATIONS\"}),/*#__PURE__*/_jsxs(\"h1\",{className:\"endText\",children:[\"You have answered all the questions, \",/*#__PURE__*/_jsx(\"br\",{}),\"you have reached the end\",/*#__PURE__*/_jsx(\"br\",{}),\"and won: \",earned]}),/*#__PURE__*/_jsx(Buttons,{}),/*#__PURE__*/_jsx(Confetti,{gravity:0.04,numberOfPieces:250,initialVelocityX:4,colors:[\"#FF4500\",\"#C9FFE5\",\"#FF0800\",\"#89CFF0\",\"#8A2BE2\",\"#C4D8E2\",\"#30BFBF\",\"#FFF600\",\"#FFAE42\",\"#32CD32\",\"#9370DB\"]}),/*#__PURE__*/_jsx(Applause,{})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main\",children:stop?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"endText\",children:[\"You earned: \",earned]}),/*#__PURE__*/_jsx(Buttons,{})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",/*#__PURE__*/_jsx(\"div\",{className:\"top\",children:/*#__PURE__*/_jsx(\"div\",{className:\"timer\",children:/*#__PURE__*/_jsx(Timer,{setStop:setStop,questionNumber:questionNumber})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom\",children:/*#__PURE__*/_jsx(Trivia,{title:title,data:datas,setStop:setStop,questionNumber:questionNumber,setQuestionNumber:setQuestionNumber})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"pyramid\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"moneyList\",children:moneyPyramid.map(m=>/*#__PURE__*/_jsxs(\"li\",{className:questionNumber===m.id?\"moneyListItem active\":\"moneyListItem\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"moneyListItemNumber\",children:m.id}),/*#__PURE__*/_jsx(\"span\",{className:\"moneyListItemAmount\",children:m.amount})]},m.id))})})]});}export default MediumOption;","map":{"version":3,"names":["React","useState","useEffect","useMemo","Trivia","axios","Timer","Buttons","useParams","Confetti","Applause","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MediumOption","questionNumber","setQuestionNumber","stop","setStop","error","setError","datas","setDatas","earned","setEarned","title","setTitle","params","number","event","getTrivia","url","_data$results","response","get","data","results","category","err","moneyPyramid","id","amount","reverse","find","m","className","children","gravity","numberOfPieces","initialVelocityX","colors","map"],"sources":["D:/2024/quiz/src/components/MediumOption.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport Trivia from \"./Trivia\";\nimport axios from \"axios\"\nimport Timer from \"./Timer\";\nimport Buttons from \"./Buttons\";\nimport { useParams } from \"react-router-dom\";\nimport Confetti from \"react-confetti\";\nimport Applause from \"./Applause\";\n\n\n\n\nfunction MediumOption() {\n\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [stop, setStop] = useState(false);\n  const [error, setError] = useState(null);\n  const [datas, setDatas] = useState([]);\n  const [earned, setEarned] = useState(\"$ 0\");\n  const [title, setTitle] = useState([]);\n\n  const params = useParams();\n  const number = params.event;\n\n\n  useEffect(() => {\n    getTrivia();\n  }, []);\n\n  const getTrivia = async () => {\n\n    const url = `https://opentdb.com/api.php?amount=10&category=${number}&difficulty=medium&type=multiple`\n\n    try {\n      const response = await axios.get(url);\n      const data = response.data\n      setTitle(data.results?.[0].category)\n\n      setDatas(data.results);\n    } catch (err) {\n      setError(err);\n    }\n  }\n\n  const moneyPyramid = useMemo(\n    () =>\n      [\n        { id: 1, amount: \"$ 100\" },\n        { id: 2, amount: \"$ 200\" },\n        { id: 3, amount: \"$ 300\" },\n        { id: 4, amount: \"$ 500\" },\n        { id: 5, amount: \"$ 800\" },\n        { id: 6, amount: \"$ 1300\" },\n        { id: 7, amount: \"$ 2100\" },\n        { id: 8, amount: \"$ 3400\" },\n        { id: 9, amount: \"$ 5500\" },\n        { id: 10, amount: \"$ 10000\" }\n      ].reverse(),\n    []\n  );\n\n  useEffect(() => {\n    questionNumber > 1 &&\n      setEarned(moneyPyramid.find((m) => m.id === questionNumber - 1).amount);\n  }, [moneyPyramid, questionNumber])\n\n  if (earned === \"$ 10000\") {\n    return (\n      <div className=\"app\">\n        <div className=\"main2\">\n          <h1 className=\"congratulations\">CONGRATULATIONS</h1>\n          <h1 className=\"endText\">You have answered all the questions, <br></br>\n            you have reached the end<br></br>\n            and won: {earned}\n          </h1>\n          <Buttons />\n          <Confetti gravity={0.04} numberOfPieces={250}\n            initialVelocityX={4}\n            colors={[\"#FF4500\", \"#C9FFE5\", \"#FF0800\", \"#89CFF0\", \"#8A2BE2\", \"#C4D8E2\", \"#30BFBF\",\n              \"#FFF600\", \"#FFAE42\", \"#32CD32\", \"#9370DB\"]}\n          />\n          <Applause />\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"main\">\n        {stop ? (<><h1 className=\"endText\">You earned: {earned}</h1>\n          <Buttons /></>) : (\n          <> <div className=\"top\">\n            <div className=\"timer\"><Timer setStop={setStop} questionNumber={questionNumber} /></div>\n          </div>\n            <div className=\"bottom\"><Trivia\n              title={title}\n              data={datas}\n              setStop={setStop}\n              questionNumber={questionNumber}\n              setQuestionNumber={setQuestionNumber} />\n            </div>\n          </>\n        )}\n\n      </div>\n      <div className=\"pyramid\">\n        <ul className=\"moneyList\">\n          {moneyPyramid.map((m) => (\n            <li className={questionNumber === m.id ? \"moneyListItem active\" : \"moneyListItem\"}\n              key={m.id}>\n              <span className=\"moneyListItemNumber\">{m.id}</span>\n              <span className=\"moneyListItemAmount\">{m.amount}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default MediumOption;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}